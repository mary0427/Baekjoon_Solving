# 14681
x = int(input())
y = int(input())

if x>0 and y>0 :
    print(1)
elif x<0 and y>0 :
    print(2)
elif x<0 and y<0 :
    print(3)
elif x>0 and y<0 :
    print(4)

# best
1.
x,y =open(0)
print("3421"[x>0::2][y>0])

    #1 open(0)
    여러 입력을 한 번에 받을 때 open(0).read() 같은 형식사용 가능(읽기모드 생략가능)
    open(0).read() == sys.stdin.read()  
      >> input()대신 빠른 입력을 받기 위해 사용.
      >> open()쓰면 sys import 안해도됨.
    3단계 02 참고.

        # standard stream
        표준 스트림
        운영체제에서 기본적으로 제공하는 추상화된 입출력 장치
            std : standard. 표준.
        	stdin   # 0. 표준입력. 키보드
        	stdout  # 1. 표준출력. 쉘 실행한 콘솔(모니터), 터미널
        	stderr  # 2. 표준오류. 표준출력과 동일.
        # open()의 모드 정리
            'r': (default) 읽기.
            't': (default) 텍스트 모드
            'b': 바이너리 모드
            'w': 쓰기. 파일이 존재할 경우 파일을 새로 작성
            'x': 독점적인 파일 만들기. 이미 파일이 존재하는 경우 에러
            'a': 추가쓰기. 파일이 존재하는 경우 파일의 끝에 이어붙임
            '+': 읽기 및 쓰기용으로 디스크 파일 열기
            'U': 유니버설 개행 모드

        기본 모드는 텍스트 읽기 모드 => 'rt'
        바이너리 쓰기 모드 => 'w+b'
            >> 파일을 열면서 0바이트로 자름.
        바이너리 읽기 모드 => 'r+b'
            >> 자르지 않고 엶.
        파이썬은 바이너리와 텍스트 입출력 구별
            >> 바이너리 모드는 디코딩 없이 bytes() 객체 반환
            >> 텍스트 모드는 파일 내용이 encoding 인자로 입력된 타입을 기반으로 str 반환
        ex)        
        f = open("binary_file", "rb")  *rb : r(읽기모드)+b(바이너리모드)

    #2 [인덱스], 문자열 슬라이싱[:]
        >> 변수[이상:미만:간격]
            ex)
            "3421"[x>0::2][y>0] 해석
                >>> []대괄호는 인덱스. 
                    [][] 인덱스의 인덱스.
                    []안 조건문은 참거짓 여부에 따라 숫자 1,0을 의미.
                        a>'0'이 참이면  1 의미 >> 41 >> y>0의 참거짓에 따라 인덱스 [0] or [1] 결정
                               거짓이면 0 의미 >> 32 >> '32'[0]=3  or  '32'[1]=2

-------------------------------------
2. print문 안에 if문을 씀.
하나의 print문으로 조건에 따라 다른 값 출력.
    if x > 0:
        print(1 if y > 0 else 4)
    else:
        print(2 if y > 0 else 3)
